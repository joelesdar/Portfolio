"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("pages/index",{

/***/ "./components/Header/styles.jsx":
/*!**************************************!*\
  !*** ./components/Header/styles.jsx ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"StyledHeader\": function() { return /* binding */ StyledHeader; }\n/* harmony export */ });\n/* harmony import */ var _emotion_styled__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @emotion/styled */ \"./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js\");\n\nconst StyledHeader = _emotion_styled__WEBPACK_IMPORTED_MODULE_0__[\"default\"].div`\r\n  background-color: rgba(18, 18, 18, 0.75);\r\n  backdrop-filter: blur(4px);\r\n  font-size: 1.2rem;\r\n  fill: red;\r\n  min-height: 5rem;\r\n\r\n  .navbar {\r\n      padding: 1rem;\r\n      margin: 0 3rem;\r\n      a {\r\n          color: white;\r\n      }\r\n      .navbar-nav {\r\n        a {\r\n          color: white;\r\n          &:hover {\r\n            color: var(--main-blue);\r\n          }\r\n          &:active {\r\n            color: white;\r\n          }\r\n          &:focus {\r\n            color: white;\r\n          }\r\n        }\r\n        .active {\r\n          color: var(--main-blue);\r\n        }\r\n        .show{\r\n          background-color: transparent;\r\n          color: var(--main-blue);\r\n        }\r\n        .dropdown-menu {\r\n            left: -25%;\r\n            background: rgba(18, 18, 18, 0.75);\r\n          }\r\n          .nav-link.show {\r\n            color: white;\r\n          }\r\n      }  \r\n  }\r\n\r\n  .container-logo {\r\n      max-width: 50px;\r\n      img {\r\n          margin: 0 auto;\r\n          width: 100%;\r\n          height: auto;\r\n      }\r\n  }\r\n\r\n  svg {\r\n      width: 25px;\r\n      margin: 0 auto;\r\n  }\r\n`;\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevExports = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevExports) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports on update so we can compare the boundary\n                // signatures.\n                module.hot.dispose(function (data) {\n                    data.prevExports = currentExports;\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevExports !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevExports, currentExports)) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevExports !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi9jb21wb25lbnRzL0hlYWRlci9zdHlsZXMuanN4LmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQW9DO0FBRTdCLE1BQU1DLGVBQWVELDJEQUFVLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9fTl9FLy4vY29tcG9uZW50cy9IZWFkZXIvc3R5bGVzLmpzeD9iNDZiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBTdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJ1xyXG5cclxuZXhwb3J0IGNvbnN0IFN0eWxlZEhlYWRlciA9IFN0eWxlZC5kaXZgXHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgxOCwgMTgsIDE4LCAwLjc1KTtcclxuICBiYWNrZHJvcC1maWx0ZXI6IGJsdXIoNHB4KTtcclxuICBmb250LXNpemU6IDEuMnJlbTtcclxuICBmaWxsOiByZWQ7XHJcbiAgbWluLWhlaWdodDogNXJlbTtcclxuXHJcbiAgLm5hdmJhciB7XHJcbiAgICAgIHBhZGRpbmc6IDFyZW07XHJcbiAgICAgIG1hcmdpbjogMCAzcmVtO1xyXG4gICAgICBhIHtcclxuICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgfVxyXG4gICAgICAubmF2YmFyLW5hdiB7XHJcbiAgICAgICAgYSB7XHJcbiAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICAmOmhvdmVyIHtcclxuICAgICAgICAgICAgY29sb3I6IHZhcigtLW1haW4tYmx1ZSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgICAmOmFjdGl2ZSB7XHJcbiAgICAgICAgICAgIGNvbG9yOiB3aGl0ZTtcclxuICAgICAgICAgIH1cclxuICAgICAgICAgICY6Zm9jdXMge1xyXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5hY3RpdmUge1xyXG4gICAgICAgICAgY29sb3I6IHZhcigtLW1haW4tYmx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC5zaG93e1xyXG4gICAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICAgICAgICBjb2xvcjogdmFyKC0tbWFpbi1ibHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLmRyb3Bkb3duLW1lbnUge1xyXG4gICAgICAgICAgICBsZWZ0OiAtMjUlO1xyXG4gICAgICAgICAgICBiYWNrZ3JvdW5kOiByZ2JhKDE4LCAxOCwgMTgsIDAuNzUpO1xyXG4gICAgICAgICAgfVxyXG4gICAgICAgICAgLm5hdi1saW5rLnNob3cge1xyXG4gICAgICAgICAgICBjb2xvcjogd2hpdGU7XHJcbiAgICAgICAgICB9XHJcbiAgICAgIH0gIFxyXG4gIH1cclxuXHJcbiAgLmNvbnRhaW5lci1sb2dvIHtcclxuICAgICAgbWF4LXdpZHRoOiA1MHB4O1xyXG4gICAgICBpbWcge1xyXG4gICAgICAgICAgbWFyZ2luOiAwIGF1dG87XHJcbiAgICAgICAgICB3aWR0aDogMTAwJTtcclxuICAgICAgICAgIGhlaWdodDogYXV0bztcclxuICAgICAgfVxyXG4gIH1cclxuXHJcbiAgc3ZnIHtcclxuICAgICAgd2lkdGg6IDI1cHg7XHJcbiAgICAgIG1hcmdpbjogMCBhdXRvO1xyXG4gIH1cclxuYFxyXG4iXSwibmFtZXMiOlsiU3R5bGVkIiwiU3R5bGVkSGVhZGVyIiwiZGl2Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///./components/Header/styles.jsx\n"));

/***/ })

});